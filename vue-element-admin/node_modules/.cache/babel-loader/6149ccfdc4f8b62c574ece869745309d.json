{"remainingRequest":"E:\\Medical\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js!E:\\Medical\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Medical\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Medical\\vue-element-admin\\src\\components\\ThemePicker\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Medical\\vue-element-admin\\src\\components\\ThemePicker\\index.vue","mtime":1660293434569},{"path":"E:\\Medical\\vue-element-admin\\babel.config.js","mtime":1660293434498},{"path":"E:\\Medical\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660293579010},{"path":"E:\\Medical\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1660293592499},{"path":"E:\\Medical\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660293579010},{"path":"E:\\Medical\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1660293602612}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAUA,yD,CAAA;;;AACA,+B,CAAA;;AAEA;EACAA,IADA,kBACA;IACA;MACAC,SADA;MACA;MACAC;IAFA;EAIA,CANA;EAOAC;IACAC,YADA,0BACA;MACA;IACA;EAHA,CAPA;EAYAC;IACAD;MACAE;QACA;MACA,CAHA;MAIAC;IAJA,CADA;IAOAL,KAPA,iBAOAM,GAPA,EAOA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACAC,MADA,GACA,0CADA;;gBAAA,MAEA,uBAFA;kBAAA;kBAAA;gBAAA;;gBAAA;;cAAA;gBAGAC,YAHA,GAGA,2CAHA;gBAIAC,eAJA,GAIA,8CAJA;gBAKAC;gBAEAC,QAPA,GAOA;kBACAC,gCADA;kBAEAC,4BAFA;kBAGAC,eAHA;kBAIAC,WAJA;kBAKAC;gBALA,EAPA;;gBAeAC,UAfA,GAeA;kBACA;oBACA;;oBACA;;oBAEA;;oBACA;sBACAC;sBACAA;sBACAC;oBACA;;oBACAD;kBACA,CAXA;gBAYA,CA5BA;;gBAAA,IA8BA,WA9BA;kBAAA;kBAAA;gBAAA;;gBA+BAE,GA/BA,0CA+BAC,OA/BA;gBAAA;gBAAA,OAgCA,gCAhCA;;cAAA;gBAmCAC,YAnCA,GAmCAL,kCAnCA;gBAqCAK;gBAEAC,MAvCA,GAuCA,kDACAC,MADA,CACA;kBACA;kBACA;gBACA,CAJA,CAvCA;gBA4CAD;kBACA;kBACA;kBACAE;gBACA,CAJA;;gBAMA;;gBAEAd;;cApDA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAqDA;EA5DA,CAZA;EA2EAe;IACAC,WADA,uBACAF,KADA,EACAG,UADA,EACAC,UADA,EACA;MACA;MACAD;QACAE;MACA,CAFA;MAGA;IACA,CAPA;IASAC,YATA,wBASAX,GATA,EASAY,QATA,EASA;MAAA;;MACA;QACA;;QACAC;UACA;YACA;YACAC;UACA;QACA,CALA;;QAMAD;QACAA;MACA,CAVA;IAWA,CArBA;IAuBAE,eAvBA,2BAuBAnC,KAvBA,EAuBA;MACA;QACA;QACA;QACA;;QAEA;UAAA;UACA;QACA,CAFA,MAEA;UACAoC;UACAC;UACAC;UAEAF;UACAC;UACAC;UAEA;QACA;MACA,CAlBA;;MAoBA;QACA;QACA;QACA;QAEAF;QACAC;QACAC;QAEAF;QACAC;QACAC;QAEA;MACA,CAdA;;MAgBA;;MACA;QACAC;MACA;;MACAA;MACA;IACA;EAlEA;AA3EA","names":["data","chalk","theme","computed","defaultTheme","watch","handler","immediate","val","oldVal","themeCluster","originalCluster","console","$message","message","customClass","type","duration","iconClass","getHandler","styleTag","document","url","version","chalkHandler","styles","filter","style","methods","updateStyle","oldCluster","newCluster","newStyle","getCSSString","variable","xhr","resolve","getThemeCluster","red","green","blue","clusters"],"sourceRoot":"src/components/ThemePicker","sources":["index.vue"],"sourcesContent":["<template>\r\n  <el-color-picker\r\n    v-model=\"theme\"\r\n    :predefine=\"['#409EFF', '#1890ff', '#304156','#212121','#11a983', '#13c2c2', '#6959CD', '#f5222d', ]\"\r\n    class=\"theme-picker\"\r\n    popper-class=\"theme-picker-dropdown\"\r\n  />\r\n</template>\r\n\r\n<script>\r\nconst version = require('element-ui/package.json').version // element-ui version from node_modules\r\nconst ORIGINAL_THEME = '#409EFF' // default color\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      chalk: '', // content of theme-chalk css\r\n      theme: ''\r\n    }\r\n  },\r\n  computed: {\r\n    defaultTheme() {\r\n      return this.$store.state.settings.theme\r\n    }\r\n  },\r\n  watch: {\r\n    defaultTheme: {\r\n      handler: function(val, oldVal) {\r\n        this.theme = val\r\n      },\r\n      immediate: true\r\n    },\r\n    async theme(val) {\r\n      const oldVal = this.chalk ? this.theme : ORIGINAL_THEME\r\n      if (typeof val !== 'string') return\r\n      const themeCluster = this.getThemeCluster(val.replace('#', ''))\r\n      const originalCluster = this.getThemeCluster(oldVal.replace('#', ''))\r\n      console.log(themeCluster, originalCluster)\r\n\r\n      const $message = this.$message({\r\n        message: '  Compiling the theme',\r\n        customClass: 'theme-message',\r\n        type: 'success',\r\n        duration: 0,\r\n        iconClass: 'el-icon-loading'\r\n      })\r\n\r\n      const getHandler = (variable, id) => {\r\n        return () => {\r\n          const originalCluster = this.getThemeCluster(ORIGINAL_THEME.replace('#', ''))\r\n          const newStyle = this.updateStyle(this[variable], originalCluster, themeCluster)\r\n\r\n          let styleTag = document.getElementById(id)\r\n          if (!styleTag) {\r\n            styleTag = document.createElement('style')\r\n            styleTag.setAttribute('id', id)\r\n            document.head.appendChild(styleTag)\r\n          }\r\n          styleTag.innerText = newStyle\r\n        }\r\n      }\r\n\r\n      if (!this.chalk) {\r\n        const url = `https://unpkg.com/element-ui@${version}/lib/theme-chalk/index.css`\r\n        await this.getCSSString(url, 'chalk')\r\n      }\r\n\r\n      const chalkHandler = getHandler('chalk', 'chalk-style')\r\n\r\n      chalkHandler()\r\n\r\n      const styles = [].slice.call(document.querySelectorAll('style'))\r\n        .filter(style => {\r\n          const text = style.innerText\r\n          return new RegExp(oldVal, 'i').test(text) && !/Chalk Variables/.test(text)\r\n        })\r\n      styles.forEach(style => {\r\n        const { innerText } = style\r\n        if (typeof innerText !== 'string') return\r\n        style.innerText = this.updateStyle(innerText, originalCluster, themeCluster)\r\n      })\r\n\r\n      this.$emit('change', val)\r\n\r\n      $message.close()\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    updateStyle(style, oldCluster, newCluster) {\r\n      let newStyle = style\r\n      oldCluster.forEach((color, index) => {\r\n        newStyle = newStyle.replace(new RegExp(color, 'ig'), newCluster[index])\r\n      })\r\n      return newStyle\r\n    },\r\n\r\n    getCSSString(url, variable) {\r\n      return new Promise(resolve => {\r\n        const xhr = new XMLHttpRequest()\r\n        xhr.onreadystatechange = () => {\r\n          if (xhr.readyState === 4 && xhr.status === 200) {\r\n            this[variable] = xhr.responseText.replace(/@font-face{[^}]+}/, '')\r\n            resolve()\r\n          }\r\n        }\r\n        xhr.open('GET', url)\r\n        xhr.send()\r\n      })\r\n    },\r\n\r\n    getThemeCluster(theme) {\r\n      const tintColor = (color, tint) => {\r\n        let red = parseInt(color.slice(0, 2), 16)\r\n        let green = parseInt(color.slice(2, 4), 16)\r\n        let blue = parseInt(color.slice(4, 6), 16)\r\n\r\n        if (tint === 0) { // when primary color is in its rgb space\r\n          return [red, green, blue].join(',')\r\n        } else {\r\n          red += Math.round(tint * (255 - red))\r\n          green += Math.round(tint * (255 - green))\r\n          blue += Math.round(tint * (255 - blue))\r\n\r\n          red = red.toString(16)\r\n          green = green.toString(16)\r\n          blue = blue.toString(16)\r\n\r\n          return `#${red}${green}${blue}`\r\n        }\r\n      }\r\n\r\n      const shadeColor = (color, shade) => {\r\n        let red = parseInt(color.slice(0, 2), 16)\r\n        let green = parseInt(color.slice(2, 4), 16)\r\n        let blue = parseInt(color.slice(4, 6), 16)\r\n\r\n        red = Math.round((1 - shade) * red)\r\n        green = Math.round((1 - shade) * green)\r\n        blue = Math.round((1 - shade) * blue)\r\n\r\n        red = red.toString(16)\r\n        green = green.toString(16)\r\n        blue = blue.toString(16)\r\n\r\n        return `#${red}${green}${blue}`\r\n      }\r\n\r\n      const clusters = [theme]\r\n      for (let i = 0; i <= 9; i++) {\r\n        clusters.push(tintColor(theme, Number((i / 10).toFixed(2))))\r\n      }\r\n      clusters.push(shadeColor(theme, 0.1))\r\n      return clusters\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.theme-message,\r\n.theme-picker-dropdown {\r\n  z-index: 99999 !important;\r\n}\r\n\r\n.theme-picker .el-color-picker__trigger {\r\n  height: 26px !important;\r\n  width: 26px !important;\r\n  padding: 2px;\r\n}\r\n\r\n.theme-picker-dropdown .el-color-dropdown__link-btn {\r\n  display: none;\r\n}\r\n</style>\r\n"]}]}