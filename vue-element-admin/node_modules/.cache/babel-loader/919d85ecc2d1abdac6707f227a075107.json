{"remainingRequest":"E:\\Medical\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js!E:\\Medical\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Medical\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Medical\\vue-element-admin\\src\\components\\JsonEditor\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Medical\\vue-element-admin\\src\\components\\JsonEditor\\index.vue","mtime":1660293434553},{"path":"E:\\Medical\\vue-element-admin\\babel.config.js","mtime":1660293434498},{"path":"E:\\Medical\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660293579010},{"path":"E:\\Medical\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1660293592499},{"path":"E:\\Medical\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660293579010},{"path":"E:\\Medical\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1660293602612}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuanNvbi5zdHJpbmdpZnkuanMiOwovLwovLwovLwovLwovLwovLwppbXBvcnQgQ29kZU1pcnJvciBmcm9tICdjb2RlbWlycm9yJzsKaW1wb3J0ICdjb2RlbWlycm9yL2FkZG9uL2xpbnQvbGludC5jc3MnOwppbXBvcnQgJ2NvZGVtaXJyb3IvbGliL2NvZGVtaXJyb3IuY3NzJzsKaW1wb3J0ICdjb2RlbWlycm9yL3RoZW1lL3J1YnlibHVlLmNzcyc7CgpyZXF1aXJlKCdzY3JpcHQtbG9hZGVyIWpzb25saW50Jyk7CgppbXBvcnQgJ2NvZGVtaXJyb3IvbW9kZS9qYXZhc2NyaXB0L2phdmFzY3JpcHQnOwppbXBvcnQgJ2NvZGVtaXJyb3IvYWRkb24vbGludC9saW50JzsKaW1wb3J0ICdjb2RlbWlycm9yL2FkZG9uL2xpbnQvanNvbi1saW50JzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdKc29uRWRpdG9yJywKCiAgLyogZXNsaW50LWRpc2FibGUgdnVlL3JlcXVpcmUtcHJvcC10eXBlcyAqLwogIHByb3BzOiBbJ3ZhbHVlJ10sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGpzb25FZGl0b3I6IGZhbHNlCiAgICB9OwogIH0sCiAgd2F0Y2g6IHsKICAgIHZhbHVlOiBmdW5jdGlvbiB2YWx1ZShfdmFsdWUpIHsKICAgICAgdmFyIGVkaXRvclZhbHVlID0gdGhpcy5qc29uRWRpdG9yLmdldFZhbHVlKCk7CgogICAgICBpZiAoX3ZhbHVlICE9PSBlZGl0b3JWYWx1ZSkgewogICAgICAgIHRoaXMuanNvbkVkaXRvci5zZXRWYWx1ZShKU09OLnN0cmluZ2lmeSh0aGlzLnZhbHVlLCBudWxsLCAyKSk7CiAgICAgIH0KICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHRoaXMuanNvbkVkaXRvciA9IENvZGVNaXJyb3IuZnJvbVRleHRBcmVhKHRoaXMuJHJlZnMudGV4dGFyZWEsIHsKICAgICAgbGluZU51bWJlcnM6IHRydWUsCiAgICAgIG1vZGU6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgZ3V0dGVyczogWydDb2RlTWlycm9yLWxpbnQtbWFya2VycyddLAogICAgICB0aGVtZTogJ3J1YnlibHVlJywKICAgICAgbGludDogdHJ1ZQogICAgfSk7CiAgICB0aGlzLmpzb25FZGl0b3Iuc2V0VmFsdWUoSlNPTi5zdHJpbmdpZnkodGhpcy52YWx1ZSwgbnVsbCwgMikpOwogICAgdGhpcy5qc29uRWRpdG9yLm9uKCdjaGFuZ2UnLCBmdW5jdGlvbiAoY20pIHsKICAgICAgX3RoaXMuJGVtaXQoJ2NoYW5nZWQnLCBjbS5nZXRWYWx1ZSgpKTsKCiAgICAgIF90aGlzLiRlbWl0KCdpbnB1dCcsIGNtLmdldFZhbHVlKCkpOwogICAgfSk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRWYWx1ZTogZnVuY3Rpb24gZ2V0VmFsdWUoKSB7CiAgICAgIHJldHVybiB0aGlzLmpzb25FZGl0b3IuZ2V0VmFsdWUoKTsKICAgIH0KICB9Cn07"},{"version":3,"mappings":";;;;;;;AAOA;AACA;AACA;AACA;;AACAA;;AACA;AACA;AACA;AAEA;EACAC,kBADA;;EAEA;EACAC,gBAHA;EAIAC,IAJA,kBAIA;IACA;MACAC;IADA;EAGA,CARA;EASAC;IACAC,KADA,iBACAA,MADA,EACA;MACA;;MACA;QACA;MACA;IACA;EANA,CATA;EAiBAC,OAjBA,qBAiBA;IAAA;;IACA;MACAC,iBADA;MAEAC,wBAFA;MAGAC,oCAHA;MAIAC,iBAJA;MAKAC;IALA;IAQA;IACA;MACA;;MACA;IACA,CAHA;EAIA,CA/BA;EAgCAC;IACAC,QADA,sBACA;MACA;IACA;EAHA;AAhCA","names":["require","name","props","data","jsonEditor","watch","value","mounted","lineNumbers","mode","gutters","theme","lint","methods","getValue"],"sourceRoot":"src/components/JsonEditor","sources":["index.vue"],"sourcesContent":["<template>\r\n  <div class=\"json-editor\">\r\n    <textarea ref=\"textarea\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CodeMirror from 'codemirror'\r\nimport 'codemirror/addon/lint/lint.css'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/rubyblue.css'\r\nrequire('script-loader!jsonlint')\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/addon/lint/lint'\r\nimport 'codemirror/addon/lint/json-lint'\r\n\r\nexport default {\r\n  name: 'JsonEditor',\r\n  /* eslint-disable vue/require-prop-types */\r\n  props: ['value'],\r\n  data() {\r\n    return {\r\n      jsonEditor: false\r\n    }\r\n  },\r\n  watch: {\r\n    value(value) {\r\n      const editorValue = this.jsonEditor.getValue()\r\n      if (value !== editorValue) {\r\n        this.jsonEditor.setValue(JSON.stringify(this.value, null, 2))\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.jsonEditor = CodeMirror.fromTextArea(this.$refs.textarea, {\r\n      lineNumbers: true,\r\n      mode: 'application/json',\r\n      gutters: ['CodeMirror-lint-markers'],\r\n      theme: 'rubyblue',\r\n      lint: true\r\n    })\r\n\r\n    this.jsonEditor.setValue(JSON.stringify(this.value, null, 2))\r\n    this.jsonEditor.on('change', cm => {\r\n      this.$emit('changed', cm.getValue())\r\n      this.$emit('input', cm.getValue())\r\n    })\r\n  },\r\n  methods: {\r\n    getValue() {\r\n      return this.jsonEditor.getValue()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.json-editor {\r\n  height: 100%;\r\n  position: relative;\r\n\r\n  ::v-deep {\r\n    .CodeMirror {\r\n      height: auto;\r\n      min-height: 300px;\r\n    }\r\n\r\n    .CodeMirror-scroll {\r\n      min-height: 300px;\r\n    }\r\n\r\n    .cm-s-rubyblue span.cm-string {\r\n      color: #F08047;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}